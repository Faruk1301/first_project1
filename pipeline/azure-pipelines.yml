trigger:
  paths:
    include:
      - app/*
      - infra/*
      - pipeline/azure-pipelines.yml

pool:
  vmImage: ubuntu-latest

variables:
  backendResourceGroup: 'terraform-backend-rg'
  backendStorageAccount: 'tfstatefaruk1234567'
  backendContainer: 'tfstate'
  backendKeyDev: 'dev.terraform.tfstate'
  backendKeyStaging: 'staging.terraform.tfstate'

stages:
- stage: Build
  jobs:
  - job: TerraformInstallation
    displayName: "Install Terraform"
    steps:
    - task: TerraformInstaller@1
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

- stage: Dev
  dependsOn: Build
  jobs:
  - job: DeployDev
    displayName: "Deploy Development WebApp"
    steps:
    - script: |
        terraform init \
          -backend-config="resource_group_name=$(backendResourceGroup)" \
          -backend-config="storage_account_name=$(backendStorageAccount)" \
          -backend-config="container_name=$(backendContainer)" \
          -backend-config="key=$(backendKeyDev)" \
          -reconfigure
      displayName: 'Terraform Init (Dev)'

    - script: |
        terraform workspace select dev || terraform workspace new dev
      displayName: 'Select/Create Dev Workspace'

    - script: |
        terraform plan -out=tfplan
      displayName: 'Terraform Plan (Dev)'

    - script: |
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply (Dev)'

    - script: |
        echo "##vso[task.setvariable variable=webAppUrlDev]$(terraform output -raw web_app_url)"
      displayName: 'Capture Dev WebApp URL'

    - script: |
        echo "Dev Web App URL: $(webAppUrlDev)"
      displayName: 'Display Dev WebApp URL'

- stage: Staging
  dependsOn: Dev
  jobs:
  - job: DeployStaging
    displayName: "Deploy Staging WebApp"
    steps:
    - script: |
        terraform init \
          -backend-config="resource_group_name=$(backendResourceGroup)" \
          -backend-config="storage_account_name=$(backendStorageAccount)" \
          -backend-config="container_name=$(backendContainer)" \
          -backend-config="key=$(backendKeyStaging)" \
          -reconfigure
      displayName: 'Terraform Init (Staging)'

    - script: |
        terraform workspace select staging || terraform workspace new staging
      displayName: 'Select/Create Staging Workspace'

    - script: |
        terraform plan -out=tfplan
      displayName: 'Terraform Plan (Staging)'

    - script: |
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply (Staging)'

    - script: |
        echo "##vso[task.setvariable variable=webAppUrlStaging]$(terraform output -raw web_app_url)"
      displayName: 'Capture Staging WebApp URL'

    - script: |
        echo "Staging Web App URL: $(webAppUrlStaging)"
      displayName: 'Display Staging WebApp URL'

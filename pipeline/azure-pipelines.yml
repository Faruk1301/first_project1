trigger:
  paths:
    include:
      - app/*
      - infra/*
      - pipeline/azure-pipelines.yml

variables:
  - group: terraform_credential
  - name: pythonVersion
    value: '3.10'
  - name: tfWorkingDir
    value: 'infra'
  - name: terraformVersion
    value: '1.5.7'
  - name: location
    value: 'East US'

  # Environment configurations
  - name: dev.app_service_name
    value: 'demo-app-faruk-dev-001'
  - name: dev.resource_group_name
    value: 'my-resource-group-dev'
  
  - name: staging.app_service_name
    value: 'webapp-faruk-staging-001'
  - name: staging.resource_group_name
    value: 'my-resource-group-staging'

  # Common
  - name: app_service_plan_name
    value: 'my-app-service-plan'

pool:
  vmImage: 'ubuntu-24.04'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        displayName: 'Build and Package App'
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'

          - script: |
              cd app
              python -m venv venv
              source venv/bin/activate
              pip install -r requirements.txt
            displayName: 'Install Dependencies'

          - task: ArchiveFiles@2
            displayName: 'Archive Application'
            inputs:
              rootFolderOrFile: 'app'
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/app.zip'
              artifact: 'drop'

  - stage: DeployDev
    displayName: 'Deploy to Dev'
    dependsOn: Build
    jobs:
      - job: DeployApp
        displayName: 'Deploy App to Dev'
        steps:
          - download: current
            artifact: drop

          - script: |
              echo "Waiting for 5 minutes to allow App Service provisioning..."
              sleep 300
            displayName: 'Wait for App Service provisioning'

          - task: AzureWebApp@1
            displayName: 'Deploy to Web App (Dev)'
            inputs:
              azureSubscription: 'terraform-sc'
              appType: 'webAppLinux'
              appName: '$(dev.app_service_name)'
              package: '$(Pipeline.Workspace)/drop/app.zip'
              runtimeStack: 'PYTHON|3.10'
              startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 app:app:app'

  - stage: DeployStaging
    displayName: 'Deploy to Staging'
    dependsOn: DeployDev
    condition: succeeded()
    jobs:
      - job: DeployApp
        displayName: 'Deploy App to Staging'
        steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            displayName: 'Deploy to Web App (Staging)'
            inputs:
              azureSubscription: 'terraform-sc'
              appType: 'webAppLinux'
              appName: '$(staging.app_service_name)'
              package: '$(Pipeline.Workspace)/drop/app.zip'
              runtimeStack: 'PYTHON|3.10'
              startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 app:app:app'

